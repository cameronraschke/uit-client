#!/bin/bash

curl 'http://mickey.uit:8080/client/certs/uit-ca.crt' --output /usr/local/share/ca-certificates/uit-ca.crt &>/dev/null
while [ ! -f /usr/local/share/ca-certificates/uit-ca.crt ]; do
  echo "Downloading CA cert..."
  curl 'http://mickey.uit:8080/client/certs/uit-ca.crt' --output /usr/local/share/ca-certificates/uit-ca.crt &>/dev/null
  sleep 1
done
curl 'http://mickey.uit:8080/client/certs/uit-web.crt' --output /usr/local/share/ca-certificates/uit-web.crt &>/dev/null
while [ ! -f /usr/local/share/ca-certificates/uit-web.crt ]; do
  echo "Downloading web cert..."
  curl 'http://mickey.uit:8080/client/certs/uit-web.crt' --output /usr/local/share/ca-certificates/uit-web.crt &>/dev/null
  sleep 1
done
update-ca-certificates

curl 'http://mickey.uit:8080/api/configs/uit-client' --output /etc/uit-client.conf &>/dev/null
while [ ! -f /etc/uit-client.conf ]; do
    echo "Downloading client config..."
    curl 'http://mickey.uit:8080/api/configs/uit-client' --output /etc/uit-client.conf &>/dev/null
    sleep 1
done

## Server config
unset configArr
declare -A configArr

# Get config value from file
getConfigValue() {
    local key="$1"
    local trim_spaces="${2:-true}"
    local value
    value=$(grep "^${key}=" /etc/uit-client.conf | cut -d'=' -f2-)
    if [[ "$trim_spaces" == "true" ]]; then
        value=$(echo "$value" | tr -d '[:space:]')
    fi
    echo "$value"
}

# Load config values (values that need spaces preserved are marked with 'false')
configArr[UIT_CLIENT_DB_USER]=$(getConfigValue "UIT_CLIENT_DB_USER")
configArr[UIT_CLIENT_DB_PASSWD]=$(getConfigValue "UIT_CLIENT_DB_PASSWD")
configArr[UIT_CLIENT_DB_NAME]=$(getConfigValue "UIT_CLIENT_DB_NAME")
configArr[UIT_CLIENT_DB_HOST]=$(getConfigValue "UIT_CLIENT_DB_HOST")
configArr[UIT_CLIENT_DB_PORT]=$(getConfigValue "UIT_CLIENT_DB_PORT")
configArr[UIT_CLIENT_NTP_HOST]=$(getConfigValue "UIT_CLIENT_NTP_HOST")
configArr[UIT_CLIENT_PING_HOST]=$(getConfigValue "UIT_CLIENT_PING_HOST")
configArr[UIT_SERVER_HOSTNAME]=$(getConfigValue "UIT_SERVER_HOSTNAME")
configArr[UIT_WEB_HTTP_HOST]=$(getConfigValue "UIT_WEB_HTTP_HOST")
configArr[UIT_WEB_HTTP_PORT]=$(getConfigValue "UIT_WEB_HTTP_PORT")
configArr[UIT_WEB_HTTPS_HOST]=$(getConfigValue "UIT_WEB_HTTPS_HOST")
configArr[UIT_WEB_HTTPS_PORT]=$(getConfigValue "UIT_WEB_HTTPS_PORT")
configArr[UIT_WEBMASTER_NAME]=$(getConfigValue "UIT_WEBMASTER_NAME")

for i in ${!configArr[@]}; do
  for file in $(find /usr/sbin/ -type f -name 'uit-*'; find /opt/uit-toolbox/ -type f); do
    if [[ -f $file ]]; then
      sanitizedValue=${configArr[$i]//\//\\/}
      sed --in-place "s/${i}/${sanitizedValue}/g" ${file}
      else
      echo "File ${file} does not exist. Exiting..."
      exit 1
    fi
  done
done

/usr/bin/chmod 700 /usr/sbin/uit-*
/usr/bin/chown root:root /usr/sbin/uit-*
/usr/bin/chmod 750 /opt/uit-toolbox/ -R
/usr/bin/chown root:root /opt/uit-toolbox/ -R